{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\n\n// custom hooks must start with \"use\"\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  //useEffect is useful for running code that needs to run every single render\n  //(can be used for things like fetching data)\n  //the empty array ( [] ) makes it so it only runs the first initial render\n  //adding a dependency within the array makes it so it looks for only that state changing to run the function\n\n  useEffect(() => {\n    //can be associated with a fetch, to then be used to stop that fetch\n    const abortCont = new AbortController();\n    fetch(url, {\n      signal: abortCont.signal\n    }).then(res => {\n      if (!res.ok) {\n        throw Error('Could not fetch data for the requested resource');\n      }\n      return res.json();\n    }).then(data => {\n      setData(data);\n      setIsPending(false);\n      setError(null);\n    }).catch(err => {\n      setIsPending(false);\n      setError(err.message);\n    });\n\n    //aborts whatever fetch it's associated with\n    return () => abortCont.abort();\n  }, [url]);\n  //whenver url changes it will re run the function to get the data for the endpoint\n\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\nexport default useFetch;","map":{"version":3,"names":["useEffect","useState","useFetch","url","_s","data","setData","isPending","setIsPending","error","setError","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","message","abort"],"sources":["C:/Users/erdos/Desktop/Web Dev/React/Net Ninja React/dojo-blog/src/useFetch.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\n// custom hooks must start with \"use\"\r\nconst useFetch = (url) =>\r\n{\r\n    const [data, setData] = useState(null);\r\n    const [isPending, setIsPending] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n\r\n      //useEffect is useful for running code that needs to run every single render\r\n    //(can be used for things like fetching data)\r\n    //the empty array ( [] ) makes it so it only runs the first initial render\r\n    //adding a dependency within the array makes it so it looks for only that state changing to run the function\r\n\r\n    useEffect(() => \r\n    {\r\n\r\n        //can be associated with a fetch, to then be used to stop that fetch\r\n        const abortCont = new AbortController();\r\n\r\n        fetch(url, {signal: abortCont.signal})\r\n        .then(res => {\r\n            if(!res.ok)\r\n            {\r\n                throw Error('Could not fetch data for the requested resource');\r\n            }\r\n            return res.json();\r\n        })\r\n        .then((data) => {\r\n            setData(data);\r\n            setIsPending(false);\r\n            setError(null);\r\n        })\r\n        .catch(err => \r\n        {\r\n            setIsPending(false);\r\n            setError(err.message);\r\n        })\r\n\r\n\r\n        //aborts whatever fetch it's associated with\r\n        return () => abortCont.abort();\r\n\r\n    }, [url]);\r\n    //whenver url changes it will re run the function to get the data for the endpoint\r\n\r\n    return {data, isPending, error};\r\n}\r\n\r\nexport default useFetch;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAE3C;AACA,MAAMC,QAAQ,GAAIC,GAAG,IACrB;EAAAC,EAAA;EACI,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAGtC;EACF;EACA;EACA;;EAEAD,SAAS,CAAC,MACV;IAEI;IACA,MAAMW,SAAS,GAAG,IAAIC,eAAe,CAAC,CAAC;IAEvCC,KAAK,CAACV,GAAG,EAAE;MAACW,MAAM,EAAEH,SAAS,CAACG;IAAM,CAAC,CAAC,CACrCC,IAAI,CAACC,GAAG,IAAI;MACT,IAAG,CAACA,GAAG,CAACC,EAAE,EACV;QACI,MAAMC,KAAK,CAAC,iDAAiD,CAAC;MAClE;MACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IACrB,CAAC,CAAC,CACDJ,IAAI,CAAEV,IAAI,IAAK;MACZC,OAAO,CAACD,IAAI,CAAC;MACbG,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC,CAAC,CACDU,KAAK,CAACC,GAAG,IACV;MACIb,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAACW,GAAG,CAACC,OAAO,CAAC;IACzB,CAAC,CAAC;;IAGF;IACA,OAAO,MAAMX,SAAS,CAACY,KAAK,CAAC,CAAC;EAElC,CAAC,EAAE,CAACpB,GAAG,CAAC,CAAC;EACT;;EAEA,OAAO;IAACE,IAAI;IAAEE,SAAS;IAAEE;EAAK,CAAC;AACnC,CAAC;AAAAL,EAAA,CA7CKF,QAAQ;AA+Cd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}